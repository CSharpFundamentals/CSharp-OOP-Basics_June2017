using System;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

[TestFixture]
public class T00TestRacesConstructors
{
    // Class names
    private Type[] classes =
    {
        typeof(Race),
        typeof(DragRace),
        typeof(DriftRace),
        typeof(CasualRace)
    };

    private string[] ctorParameters = { "Int32", "String", "Int32"};

    [Test]
    public void TestMethod()
    {
        foreach (var className in classes)
        {
            AssertConstructors(className);
        }
    }

    private void AssertConstructors(Type className)
    {
        ConstructorInfo[] constructors = className.GetConstructors(BindingFlags.Instance | BindingFlags.Public);

        foreach (var ctor in constructors)
        {
            var parameters = ctor.GetParameters();
            Assert.IsTrue(parameters.Length == ctorParameters.Length);
            for (int i = 0; i < ctorParameters.Length; i++)
            {
                Assert.AreEqual(parameters[i].ParameterType.Name, ctorParameters[i], "Constructor parameters are in wrong order");
            }
        }
    }
}